security:
    encoders:
        App\Entity\Apiuser:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Apiuser
                property: username
    firewalls:
        #  dev:
        #     pattern: ^/(_(profiler|wdt)|css|images|js)/
        #     security: false
        #Autoriser la creation d'utilisateur sans connexion
        registration:
            pattern:  ^/api/apiusers
            stateless: true
            anonymous: true
            methods: [POST]

        # login de l'api
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        #Securisation complet de l'API
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator



        main:
            anonymous: lazy
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/apiusers, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/api/apiusers, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, DELETE]  }
        - { path: ^/api/administrators, roles: IS_AUTHENTICATED_FULLY, methods: [GET,PUT, DELETE]  }
        - { path: ^/api/products, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/utilisateurs, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/clients, roles: IS_AUTHENTICATED_FULLY }

        # - { path: ^/profile, roles: ROLE_USER }
